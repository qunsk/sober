<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="sober"></context:component-scan>

	<beans:bean id="lc" class="sober.InterceptorCheck" />
	<interceptors>
		<interceptor>
			<!-- 여기에 각자 인터셉터로 던질 요청 추가하시면 됩니다. 아래는 예시입니다. -->
			<!-- <mapping path="/partywriteform" /> -->
			<mapping path="/**" />
			<beans:ref bean="lc" />
		</interceptor>
	</interceptors>


	<!-- 파일 업로드 bean 생성 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>

    <!-- API key 값 파일 읽어서 bean 생성하도록 설정  -->
    <!--  여기서 설정한 bean은 @service 등 @Component 가 붙은 클래스에서만 사용 가능합니다.  -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations"
			value="classpath:key_properties" />
	</beans:bean>





</beans:beans>
